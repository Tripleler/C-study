// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestWeb.Data;

#nullable disable

namespace TestWeb.Migrations.My
{
    [DbContext(typeof(MyContext))]
    [Migration("20230702121548_CreateCommentTable")]
    partial class CreateCommentTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestWeb.Models.Board", b =>
                {
                    b.Property<int>("BoardNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BoardNo"));

                    b.Property<string>("BoardContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoardTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BoardViewCount")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("BoardWritter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Deleted")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("EditDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileNames")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BoardNo");

                    b.ToTable("Board", (string)null);
                });

            modelBuilder.Entity("TestWeb.Models.Board_view", b =>
                {
                    b.Property<int>("BoardNo")
                        .HasColumnType("int");

                    b.Property<string>("BoardContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoardTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BoardViewCount")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("BoardWritter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BoardNo");

                    b.ToTable((string)null);

                    b.ToView("Board_view", (string)null);
                });

            modelBuilder.Entity("TestWeb.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BoardNo")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoardNo");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("TestWeb.Models.Login", b =>
                {
                    b.Property<string>("USER_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("USER_PWD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("USER_ID");

                    b.ToTable((string)null);

                    b.ToView("LOGIN", (string)null);
                });

            modelBuilder.Entity("TestWeb.Models.Register_Input", b =>
                {
                    b.Property<string>("USER_ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EMAIL_ADRESS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("USER_PWD")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("USER_ID");

                    b.ToTable("USER", (string)null);
                });

            modelBuilder.Entity("TestWeb.Models.Comment", b =>
                {
                    b.HasOne("TestWeb.Models.Board", "Board")
                        .WithMany("Comments")
                        .HasForeignKey("BoardNo");

                    b.Navigation("Board");
                });

            modelBuilder.Entity("TestWeb.Models.Board", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
